AWSTemplateFormatVersion: '2010-09-09'
Description: EKS cluster with Fargate workload
#============================================================================#
 # Parameters
#============================================================================#
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Select VPC for Control Plane
    Default: vpc-######
  ControlPlaneSubnetA:
    Type: AWS::EC2::Subnet::Id
    Description: Select subnet for Control Plane
    Default: subnet--######
  ControlPlaneSubnetB:
    Type: AWS::EC2::Subnet::Id
    Description: Select subnet for Control Plane
    Default: subnet--######
  FargateProfilePvtSubnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Select private subnet for Fargate profile
    Default: subnet--######
  FargateProfilePvtSubnet2:
    Type: AWS::EC2::Subnet::Id
    Default: subnet--######
    Description: Select private subnet for Fargate profile
  NameSpace:
    Type: String
    Default: myns
    Description: Enter namespace
  EKSClusterName:
    Type: String
    Description: Name of k8s cluster
    Default: eks-cluster
    

#============================================================================#
 # Resources
#============================================================================#
Resources:
  # Control plane
  ControlPlane:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref EKSClusterName
      Version: "1.27"
      RoleArn: !GetAtt ControlPlaneRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ControlPlaneSecurityGroup
        SubnetIds:
          - !Ref ControlPlaneSubnetA
          - !Ref ControlPlaneSubnetB 
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
      Tags:
        - Key: project
          Value: demo
        - Key: costcenter
          Value: CC
        - Key: criticality
          Value: low
        - Key: createdby
          Value: e2esa
        - Key: createdon
          Value: currentdate
        - Key: env
          Value: dev
        - Key: maintainer
          Value: maintainer@domain.com
  # Control plane role
  ControlPlaneRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "ControlPlaneRole-CF-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
            Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

# Control plane security group
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the elastic network interfaces between the control plane and the worker nodes
      VpcId: !Ref VPC
      Tags:
        - Key: cfstack
          Value: !Sub "${AWS::StackName}-ControlPlaneSecurityGroup"
  # Configure Fargate Profile
  EKSFargateProfile:
    #DependsOn: EKSIdpConfig
    DependsOn: ControlPlane
    Type: 'AWS::EKS::FargateProfile'
    Properties:
      FargateProfileName: !Sub "${AWS::StackName}-FargateProfile"
      ClusterName: !Ref EKSClusterName
      PodExecutionRoleArn: !GetAtt EKSFargatePodExecutionRole.Arn
      Subnets:
        - !Ref FargateProfilePvtSubnet1
        - !Ref FargateProfilePvtSubnet2
      Selectors:
        - Namespace: !Ref NameSpace
          Labels:
            - Key: service
              Value: clamav
  # EKS Fargate PodExecution Role
  EKSFargatePodExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "EKSFargatePodExecutionRole-CF-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
            Effect: Allow
            Principal:
              Service:
                - eks-fargate-pods.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
  # EKS Identity provider config
  # EKSIdpConfig:
  #   DependsOn: EKSFargateProfile
  #   Type: AWS::EKS::IdentityProviderConfig
  #   Properties:
  #     ClusterName: !Ref EKSClusterName
  #     Type: oidc
  #     Oidc:
  #       ClientId: "kubernetes"
  #       IssuerUrl: "https://example.com"
